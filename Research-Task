What is DevOps, and wahy is it important in modern?

Devops is a set of practices , principles and tools to increase an orginization ability to deliver the applications and services at high speed. It involves the collaboration between
software development and Operations teams. Devops aims to streamline the software development life cycle , making it faster and more efficient. Key components of Devops are:

1. Collaboration and Communication : Devops involves the collaboration between software development and operations team. they aims to streamline the  SDLC life cycle
D
2. Automation : Devops permotes automation in deployment , testing , configuraion management and monitoring.

3. Contineous Intigration and Delivery : CI involves frequently integrating code changes into a shared repository to detect bugs and errors early. CD automates the release process, allowing code to be deployed to production quickly and reliably.

4. Infrastructure as a Code : DevOps uses code-based configuration management tools to automate the setup and management of infrastructure, making environments reproducible and scalable.

5. Monitoring and Feedback: Continuous monitoring of applications and infrastructure ensures performance issues or failures are detected early.


       Importance of Devops in IT world

1. Faster Time-to-Market

2. Improved Quality and Reliability

3. Enhanced Collaboration

4. Cost Efficiency

5. Scalability and Flexibility


2. Key differences between DevOps and traditional IT approaches?

 Devops : 1. Collaborative, cross-functional teams
          2. Fast, iterative, frequent releases
	  3. High automation across all processes
	  4. Continuous communication, shared responsibility
	  5. Infrastructure as Code, cloud-native
	  6. Real-time monitoring, continuous feedback
          7. Continuous integration and delivery
	  8. Early detection of issues via automation


Traditional IT: 1. teams work independently and not much collaboration
		2. Slower, large batch releases
		3. Manual processes in many areas
		4. Limited communication, handoffs between teams
		5. Manual infrastructure management
		6. Reactive monitoring, slower feedback
		7. Larger, less frequent releases
                8. Riskier due to larger updates


3. The role of CI/CD pipelines in the DevOps lifecycle ?

CI is the practice of automatically integrating code changes from multiple contributors into a shared repository frequently, often several times a day. The goal of CI is to ensure that the code is always in a deployable state, allowing teams to detect issues early and deliver features faster.
		
Key Benefits of CI:

1. Early Detection of Issues
2. Automated Testing
3. Faster Development Cycles

Continuous Delivery (CD)

Continuous Delivery extends CI by automating the release process so that the software can be deployed to production with a single click or automatically after passing all tests.

Key Benefits of CD:

1. Rapid Delivery of Features
2. Reduced Risk
3. Increased Reliability

          The CI/CD Pipeline Workflow

A typical CI/CD pipeline consists of the following stages:

1. Code Commit
2. Build
3. Automated Tests
4. Artifact Creation
5. Deployment to Staging/Production
6. Monitoring & Feedback  
